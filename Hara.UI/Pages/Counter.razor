@page "/counter"
@inject ICounterState CounterState
@inject UIStateService UiStateService
@using Hara.Abstractions.Contracts
@using Hara.UI.Services
@implements IDisposable


<section>
    
<p>Current Counter: @CounterState.CurrentCount</p>
    <ion-button @onclick="CounterState.IncrementCount" expand="block">Increase Counter</ion-button>
</section>
<section>
    <ion-button @onclick="ToggleLoader" expand="block">Toggle loader (currently @VisibleLoader)</ion-button>
</section>

<IonLoading @bind-visible="@VisibleLoader" message="eeee" backdrop-dismiss="true"></IonLoading>

@code {

    public bool VisibleLoader { get; set; }

    protected override void OnInitialized()
    {
        UiStateService.PageTitle = "Counter";
        CounterState.StateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        CounterState.StateChanged -= StateHasChanged;
    }

    public void OnLoaderDismissed()
    {
        VisibleLoader = false;
    }

    public void VisibleChanged(bool visible)
    {
        VisibleLoader = visible;
    }

    private void ToggleLoader()
    {
        VisibleLoader = !VisibleLoader;
        Task.Run(async () =>
        {
            await Task.Delay(5000);
            VisibleLoader = false;
            await InvokeAsync(StateHasChanged);
        });
    }

}