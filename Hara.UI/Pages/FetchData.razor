@page "/fetchdata"
@using Hara.Abstractions
@using Hara.Abstractions.Contracts
@using Hara.UI.Services
@inject UIStateService UiStateService
@inject IWeatherForecastFetcher WeatherForecastFetcher

<p>This component demonstrates fetching data from the server.</p>

@if (_forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<WeatherForecast> _forecasts;

    protected override async Task OnInitializedAsync()
    {
        UiStateService.PageTitle = "Weather forecast";
        _forecasts = await WeatherForecastFetcher.Fetch();
    }

}
